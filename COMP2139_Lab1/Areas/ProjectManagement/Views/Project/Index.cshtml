@model List<Project>

@{
    // razor block
    ViewData["Title"] = "Projects";
    bool searchPerformed = ViewData["SearchPerformed"] as bool? ?? false;
    string searchString = ViewData["SearchString"] as string;

}

<h2>Projects</h2> <br />

<a asp-action="Create" class="btn btn-primary">Create New Project</a>
@if(Model.Any())
{
 <table class="table">
     <thead>
         <tr>
             <th>ID</th>
             <th>Name</th>
             <th>Description</th>
             <td>Summary</td>
             <th>Action</th> <!-- Column for action buttons Details, Edit, Delete-->
         </tr>
     </thead>

        <tbody>
            @foreach(var project in Model)
            {
                <tr>
                    <td>@project.projectID</td>
                    <td>@project.Name</td>
                    <td>@project.Description</td>

                    <!-- Inject ViewComponent-->
                    <td>
                        @await Component.InvokeAsync("ProjectSummary", new {projectId = project.projectID})
                    </td>


                    <td>
                        <a asp-action="Details" asp-route-id="@project.projectID" class="btn btn-info">Details</a>
                        <a asp-action="Edit" asp-route-id="@project.projectID" class="btn btn-secondary">Edit</a>
                        <a asp-action="Delete" asp-route-id="@project.projectID" class="btn btn-danger">Delete</a>
                        <a asp-controller="Task" asp-action="Index"  asp-route-projectID="@project.projectID" class="btn btn-warning">View Tasks</a>

                    </td>
                </tr>
            }
            
        </tbody>
    </table> <br />


} else
{
    if (searchPerformed)
    {
        <p> No projects with the name or description "@searchString" were found</p>
    }
    else
    {
        <p>No projects available</p>
    }
    
}
